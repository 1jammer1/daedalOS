@import '@/styles/mixins';

$buttonIconOpacity: 0.75;

// Window bottom right and left corners showing something?

.window {
  z-index: map-get($window, z-index);

  border-radius: map-get($window, border-radius);
  box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.1), 0 5px 50px rgba(0, 0, 0, 0.3);

  &:focus-within {
    #minimize {
      color: $minimize;
      background-color: $minimize;

      &:hover {
        color: rgba(map-get($window, title-bar-color), $buttonIconOpacity);
        background-color: $minimize;
      }
    }

    #maximize {
      color: $maximize;
      background-color: $maximize;

      &:hover {
        color: rgba(map-get($window, title-bar-color), $buttonIconOpacity);
        background-color: $maximize;
      }
    }

    #close {
      color: $close;
      background-color: $close;

      &:hover {
        color: rgba(map-get($window, title-bar-color), $buttonIconOpacity);
        background-color: $close;
      }
    }
  }

  header {
    display: flex;
    align-items: center;

    height: map-get($window, title-bar-height);

    color: map-get($window, title-bar-text-color);
    border-radius: map-get($window, border-radius)
      map-get($window, border-radius) 0 0;
    background: linear-gradient(
      180deg,
      rgb(75, 75, 75) 10%,
      rgb(45, 45, 45) 100%
    );

    h1 {
      font-size: map-get($window, title-bar-font-size);
      font-weight: normal;

      display: flex;
      align-items: center;
      justify-content: center;

      width: 100%;

      text-align: center;

      img {
        position: relative;

        width: 16px;
        height: 16px;
        margin-right: 4px;
      }
    }

    nav {
      position: absolute;
      left: 0;

      display: flex;

      padding: 8px;

      button {
        display: flex;
        align-items: center;
        justify-content: center;

        width: 12px;
        height: 12px;
        margin-right: 8px;

        color: lighten(map-get($window, title-bar-color), 15%);
        border: 0;
        border-radius: 100%;
        background-color: lighten(map-get($window, title-bar-color), 15%);

        &:last-child {
          margin-right: unset;
        }

        &#minimize:hover {
          color: rgba(map-get($window, title-bar-color), $buttonIconOpacity);
          background-color: $minimize;
        }

        &#maximize:hover {
          color: rgba(map-get($window, title-bar-color), $buttonIconOpacity);
          background-color: $maximize;
        }

        &#close:hover {
          color: rgba(map-get($window, title-bar-color), $buttonIconOpacity);
          background-color: $close;
        }
      }
    }
  }

  &:not(:focus) {
    header {
      background: unset;
      background-color: rgb(50, 50, 50);

      h1 {
        opacity: 0.5;

        filter: grayscale(1);
      }
    }
  }

  article {
    @include scrollbars(
      15px,
      map-get($window, border-radius) * 2,
      map-get($window, scroll-bar-color),
      map-get($window, bg-color)
    );

    height: calc(100% - #{map-get($window, title-bar-height)});

    border-radius: 0 0 map-get($window, border-radius)
      map-get($window, border-radius);
    background-color: map-get($window, bg-color);
  }
}
